name: Python package

on:
  push:
    branches: [ develop, master, support-3.10 ]
  pull_request:
    branches: [ develop, master ]
  schedule:
    # minute 39 of every hour
    - cron:  '39 * * * *'

env:
  SQLITE_TEST: 1
  POSTGRES_TEST: 1
  MYSQL_TEST: 1
  PGPASSWORD: postgres
  MYSQLPASS: password

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']
    # There's some recursion error here (See #76)
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: ./ci-install.sh
    - name: Test
      run: ./ci-test.sh
    - name: Coveralls
      if: github.event_name != 'schedule'
      run: coveralls --service=github
      env:
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_PARALLEL: true
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
          MYSQL_USER: test
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
        # Set health checks to wait until mysql has started
        #
        # health-cmd *must* use double-quotes -- apparently Actions just slams
        # everything in between single quotes with no quoting.
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

  dev-deploy:
    name: Deploy Dev Package to PyPI
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3
      - name: Install Deploy Dependencies
        run: pip install wheel twine
      - name: Deploy
        run: ./deploy.sh
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  coveralls:
    name: Indicate completion to coveralls.io
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
