- Add support for specifying dependencies at the project level rather than the
  bundle level so we can have a dependency on the core bundle in other projects.
  (XXX: Can we allow Bundle descriptors to automatically include all project
  dependencies?  Also, can we allow bundle descriptors to reference project
  dependencies so they just specify the bundle ID and don't have to specify the
  version, excludes, etc.?)
  
- Define a project module that can share code with Bundle for building an
  aggregate store based on dependencies.

- Add acc test for source list from a project with a core bundle dep.

# Bundle commands
- add version number param to OWMBundle::checkout 
- add version number param to OWMBundle::deploy

# Bundle query
- Limit contexts returned from repeated stores with 'excludes' to only list
  excluded (as appropriate. see below)
- Test multiple dependencies excluding/including supersets subsets of each
  others' contexts

- Translate the below into Github issues

- Describe in the documentation the repository, which verifies imported contexts
by downloading them or hashing them

- Describe in the documentation potential "value-added" features that a repo
may implement

- Write an `owm source save` command as a special case of `owm data save` which 

- Make `owm source save` allow to save a directory tree with a user-selected
"data source directory saver" (e.g., an OWMDataSourceDirectorySaver that saves

- Consider distribution schemes that package Python code together with the data

- Add a further specialization for saving data sources that either prompts for,
or accepts on the command line, the fields for the data source

- Write documentation describing the notion of the (current) data context and
(current) imports context

